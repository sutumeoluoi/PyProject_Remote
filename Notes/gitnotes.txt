1. get git projects from github. Project folder will create matching project name in github. 

C:\>git clone https://github.com/sutumeoluoi/Py_Projects.git

folder C:\Py_Projects got created with all matching git info from github project

#################################################
git init
git remote add origin git://github.com/cmcculloh/repo.git
git fetch --all
git pull origin master

Vs.

git clone git://github.com/cmcculloh/repo.git

>>>They're basically the same, except clone will setup additional remote tracking branches, not just master. 
Clones a repository into a newly created directory, creates remote-tracking branches for each branch in the cloned repository 
(visible using git branch -r), and creates and checks out an initial branch that is forked from the cloned 
repository's currently active branch.
#################################################

2. Merge master -> branch or branch -> master(master is way behind branch)
*Stay on branch
git checkout develop
git merge master

*Vice versa
git checkout master
git merge develop

3. Force point master to branch. This force create new master and delete old master
git branch -f master branchToMoveMasterTo

4. Push all local branch to remote and tracking those branches
git push origin --all -u 

5. Stash current un-commit changes of working directory to switch to different branch. Without stashing, current changes LOST
git stash save 'gitnotes change'	#save with notes
git stash list	#list all stashes
git stash pop	#push stashes back to working directory

5. pull new branch from remote(pulling new branch from remote to local as name 'origin/home_1020'. Create new branch 'home_1020' at local and checkout it
git fetch origin
git checkout -b home_1020 origin/home_1020